// Time Complexity = O(n * logn)

import java.io.*;
import java.util.*;

public class Solution {
    
    public static void merge(int arr[], int start, int mid, int end){
        
        int merged[] = new int[arr.length];
        int i=start;
        int j=mid+1;
        int k=start;
        
        //compare are merge
        while(i<=mid && j<=end){
            
            if(arr[i] <= arr[j]){
                merged[k] = arr[i];
                i++;
                k++;
            }
            
            else{
                merged[k] = arr[j];
                j++;
                k++;
            }
                   }
        
        while(i<=mid){
            merged[k++] = arr[i++];
        }
        
        while(j<=end){
            merged[k++] = arr[j++];
        }
        
        //copy back to original array
        for(i=start; i<=end; i++){
            arr[i] = merged[i];
        }
    }
    public static void mergeSort(int arr[], int start, int end){
        
        if(start >= end)
            return;
        
        int mid = (start+end)/2;
        
        mergeSort(arr, start, mid);
        mergeSort(arr, mid+1, end);
        merge(arr,start,mid,end);
    }
    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        
        int arr[] = new int[n];
        for(int i=0; i<n; i++){
            arr[i] = sc.nextInt();
        }
        
        mergeSort(arr,0,n-1);
        
        for(int i=0; i<n; i++){
            System.out.print(arr[i] + " ");
        }
        
    }
}
